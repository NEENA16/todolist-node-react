{"ast":null,"code":"var _jsxFileName = \"/home/neena/notes-app/notes-app-ui/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport Input from './components/input/Input';\nimport Notes from './components/notes/Notes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst notesData = [{\n  id: 1,\n  title: 'test note 1',\n  content: 'bla bla note1'\n}, {\n  id: 2,\n  title: 'test note 2 ',\n  content: 'bla bla note2'\n}, {\n  id: 3,\n  title: 'test note 3',\n  content: 'bla bla note3'\n}, {\n  id: 4,\n  title: 'test note 4 ',\n  content: 'bla bla note4'\n}, {\n  id: 5,\n  title: 'test note 5',\n  content: 'bla bla note5'\n}, {\n  id: 6,\n  title: 'test note 6',\n  content: 'bla bla note6'\n}];\nconst App = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [notes, setNotes] = useState(notesData);\n  const [selectedNote, setSelectedNote] = useState(null);\n  const handleAddNote = async event => {\n    event.preventDefault();\n    // try {\n    //   const response = await fetch('http://localhost:5000/api/notes', {\n    //     method: 'POST',\n    //     headers: { 'Content-Type': 'application/json' },\n    //     body: JSON.stringify({ title, content })\n    //   });\n    //   const newNote = await response.json();\n    //   console.log('ew', newNote);\n    //   setNotes([newNote, ...notes]);\n    //   setTitle('');\n    //   setContent('');\n    // } catch (error) {\n    //   console.log(error);\n    // }\n    setNotes([{\n      id: notes.length,\n      title,\n      content\n    }, ...notes]);\n    setTitle('');\n    setContent('');\n  };\n  console.log('note', notes);\n  const handleNoteClick = note => {\n    setSelectedNote(note);\n    setTitle(note.title);\n    setContent(note.content);\n  };\n  const handelUpdateNote = async () => {\n    // try {\n    //   const response = await fetch(\n    //     `http://localhost:5000/api/notes/${selectedNote?.id}`,\n    //     {\n    //       method: 'PUT',\n    //       headers: { 'Content-Type': 'application/json' },\n    //       body: JSON.stringify({ title, content })\n    //     }\n    //   );\n    //   const updatedNote = await response.json();\n    //   const updatedNoteList = notes.map((item) =>\n    //     item.id === selectedNote?.id ? updatedNote : item\n    //   );\n    //   setNotes(updatedNoteList);\n    // } catch (error) {\n    //   console.log(error);\n    // }\n    const updatedNote = {\n      id: (selectedNote === null || selectedNote === void 0 ? void 0 : selectedNote.id) || not,\n      title,\n      content\n    };\n    const updatedNoteList = notes.map(item => item.id === (selectedNote === null || selectedNote === void 0 ? void 0 : selectedNote.id) ? updatedNote : item);\n    setNotes(updatedNoteList);\n  };\n  const handleCancel = () => {\n    setSelectedNote(null);\n    setTitle('');\n    setContent('');\n  };\n  const handleDeleteNote = async (event, note) => {\n    event.stopPropagation();\n    try {\n      await fetch(`http://localhost:5000/api/notes/${note.id}`, {\n        method: 'DELETE'\n      });\n      const updatedNoteList = notes.filter(item => item.id !== note.id);\n      setNotes(updatedNoteList);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/notes');\n        const note = await response.json();\n        setNotes(note);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex w-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"flex w-1/4 flex-col\",\n      onSubmit: selectedNote ? handelUpdateNote : handleAddNote,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        value: title,\n        onChange: event => setTitle(event.target.value),\n        className: \"mb-8 p-2\",\n        placeholder: \"Title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: event => setContent(event.target.value),\n        placeholder: \"Content\",\n        required: true,\n        rows: 10,\n        className: \"rounded-md border p-2 focus:outline-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), selectedNote ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"mt-4 h-10 w-1/2 rounded-md bg-[#409ab8] text-white\",\n          onClick: handelUpdateNote,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"mt-4 h-10 w-1/2 rounded-md bg-[#409ab8] text-white\",\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"mt-4 h-10 rounded-md bg-[#409ab8] text-white\",\n        children: \"Add Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ml-4 grid w-3/4 grid-cols-2 gap-4\",\n      children: notes.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        role: \"presentation\",\n        onClick: () => handleNoteClick(item),\n        children: /*#__PURE__*/_jsxDEV(Notes, {\n          title: item.title,\n          content: item.content,\n          handleCancelClick: e => handleDeleteNote(e, item)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"DPkXrmkCpUZYmv65BusMkShJS3w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Input","Notes","jsxDEV","_jsxDEV","notesData","id","title","content","App","_s","setTitle","setContent","notes","setNotes","selectedNote","setSelectedNote","handleAddNote","event","preventDefault","length","console","log","handleNoteClick","note","handelUpdateNote","updatedNote","not","updatedNoteList","map","item","handleCancel","handleDeleteNote","stopPropagation","fetch","method","filter","error","fetchData","response","json","className","children","onSubmit","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","rows","type","onClick","role","handleCancelClick","e","_c","$RefreshReg$"],"sources":["/home/neena/notes-app/notes-app-ui/src/App.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport Input from './components/input/Input';\nimport Notes from './components/notes/Notes';\n\ntype Note = { id: number; title: string; content: string };\n\nconst notesData: Note[] = [\n  {\n    id: 1,\n    title: 'test note 1',\n    content: 'bla bla note1'\n  },\n  {\n    id: 2,\n    title: 'test note 2 ',\n    content: 'bla bla note2'\n  },\n  {\n    id: 3,\n    title: 'test note 3',\n    content: 'bla bla note3'\n  },\n  {\n    id: 4,\n    title: 'test note 4 ',\n    content: 'bla bla note4'\n  },\n  {\n    id: 5,\n    title: 'test note 5',\n    content: 'bla bla note5'\n  },\n  {\n    id: 6,\n    title: 'test note 6',\n    content: 'bla bla note6'\n  }\n];\n\nconst App = () => {\n  const [title, setTitle] = useState<string>('');\n  const [content, setContent] = useState<string>('');\n  const [notes, setNotes] = useState<Note[]>(notesData);\n  const [selectedNote, setSelectedNote] = useState<Note | null>(null);\n\n  const handleAddNote = async (event: React.FormEvent) => {\n    event.preventDefault();\n    // try {\n    //   const response = await fetch('http://localhost:5000/api/notes', {\n    //     method: 'POST',\n    //     headers: { 'Content-Type': 'application/json' },\n    //     body: JSON.stringify({ title, content })\n    //   });\n    //   const newNote = await response.json();\n    //   console.log('ew', newNote);\n    //   setNotes([newNote, ...notes]);\n    //   setTitle('');\n    //   setContent('');\n    // } catch (error) {\n    //   console.log(error);\n    // }\n    setNotes([{ id: notes.length, title, content }, ...notes]);\n    setTitle('');\n    setContent('');\n  };\n  console.log('note', notes);\n  const handleNoteClick = (note: Note) => {\n    setSelectedNote(note);\n    setTitle(note.title);\n    setContent(note.content);\n  };\n\n  const handelUpdateNote = async () => {\n    // try {\n    //   const response = await fetch(\n    //     `http://localhost:5000/api/notes/${selectedNote?.id}`,\n    //     {\n    //       method: 'PUT',\n    //       headers: { 'Content-Type': 'application/json' },\n    //       body: JSON.stringify({ title, content })\n    //     }\n    //   );\n    //   const updatedNote = await response.json();\n    //   const updatedNoteList = notes.map((item) =>\n    //     item.id === selectedNote?.id ? updatedNote : item\n    //   );\n    //   setNotes(updatedNoteList);\n    // } catch (error) {\n    //   console.log(error);\n    // }\n    const updatedNote = { id: selectedNote?.id || not, title, content };\n    const updatedNoteList = notes.map((item) =>\n      item.id === selectedNote?.id ? updatedNote : item\n    );\n    setNotes(updatedNoteList);\n  };\n\n  const handleCancel = () => {\n    setSelectedNote(null);\n    setTitle('');\n    setContent('');\n  };\n\n  const handleDeleteNote = async (\n    event: React.MouseEvent<HTMLElement>,\n    note: Note\n  ) => {\n    event.stopPropagation();\n    try {\n      await fetch(`http://localhost:5000/api/notes/${note.id}`, {\n        method: 'DELETE'\n      });\n      const updatedNoteList = notes.filter((item) => item.id !== note.id);\n      setNotes(updatedNoteList);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/notes');\n        const note: Note[] = await response.json();\n        setNotes(note);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"flex w-full\">\n      <form\n        className=\"flex w-1/4 flex-col\"\n        onSubmit={selectedNote ? handelUpdateNote : handleAddNote}\n      >\n        <Input\n          value={title}\n          onChange={(event) => setTitle(event.target.value)}\n          className=\"mb-8 p-2\"\n          placeholder=\"Title\"\n          required\n        />\n        <textarea\n          value={content}\n          onChange={(event) => setContent(event.target.value)}\n          placeholder=\"Content\"\n          required\n          rows={10}\n          className=\"rounded-md border p-2 focus:outline-none\"\n        />\n        {selectedNote ? (\n          <div className=\"w-full\">\n            <button\n              type=\"submit\"\n              className=\"mt-4 h-10 w-1/2 rounded-md bg-[#409ab8] text-white\"\n              onClick={handelUpdateNote}\n            >\n              Save\n            </button>\n            <button\n              type=\"submit\"\n              className=\"mt-4 h-10 w-1/2 rounded-md bg-[#409ab8] text-white\"\n              onClick={handleCancel}\n            >\n              Cancel\n            </button>\n          </div>\n        ) : (\n          <button\n            type=\"submit\"\n            className=\"mt-4 h-10 rounded-md bg-[#409ab8] text-white\"\n          >\n            Add Note\n          </button>\n        )}\n      </form>\n      <div className=\"ml-4 grid w-3/4 grid-cols-2 gap-4\">\n        {notes.map((item) => (\n          <div\n            role=\"presentation\"\n            key={item.id}\n            onClick={() => handleNoteClick(item)}\n          >\n            <Notes\n              title={item.title}\n              content={item.content}\n              key={item.id}\n              handleCancelClick={(e: React.MouseEvent<HTMLElement>) =>\n                handleDeleteNote(e, item)\n              }\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}